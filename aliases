alias r!='. ~/.zshrc'
alias ack!='. ~/.ackrc'

# alias gvim="/Library/Documentation/Applications/MacVim.app/Contents/MacOS/Vim -g"
# alias gvim="/usr/local/Cellar/macvim/7.4-96/MacVim.app/Contents/MacOS/Vim -g"
alias gvim="/Users/funkydrummer/Tools/macvim/src/MacVim/build/Release/MacVim.app/Contents/MacOS/Vim -g"

alias off="sudo shutdown -h +60"
alias killoff='sudo killall shutdown'

alias q="exit"
alias cd..="cd .."
alias ..="cd .."
alias p="cd ~/Projects"
alias df="cd ~/dotfiles"

alias showhiddenfiles="defaults write com.apple.finder AppleShowAllFiles TRUE && killall Finder"
alias dontshowhiddenfiles="defaults write com.apple.finder AppleShowAllFiles FALSE && killall Finder"

# Copy publickey to clipboard
alias pubkey="cat ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"
alias prograilspubkey="cat ~/.ssh/id_rsa_prograils.pub | pbcopy | echo '=> Public prograils key copied to pasteboard.'"

alias getpath='echo -n $PWD|pbcopy|echo "current path copied to clipboard"'

alias e=gvim
alias v=vim
alias g=git

alias rmvimtemp='rm ~/.vim/_temp/*'
alias aliases='e ~/.aliases'
alias vimrc='e ~/.vimrc'
alias zshrc='e ~/.zshrc'
alias ackrc='e ~/.ackrc'
alias gvimrc='e ~/.gvimrc'
alias gitcf='e ~/.gitconfig'
alias sshcf='e ~/.ssh/config'
alias scr="cd ~/scripts"

# Bundler
alias b=bundle
alias be="bundle exec"
alias bi="bundle install"
alias bl="bundle list"
alias bp="bundle package"
alias bu='bundle update'

# Rails
alias rl=rails
alias rs='rails server'
alias rc='rails console'
alias r=rake
alias st='be ruby -Itest'
alias migrate='rake db:migrate db:test:prepare'
alias prepare='rake db:test:prepare'
alias dbreload!='RAILS_ENV=test rake db:drop && RAILS_ENV=test rake db:create && RAILS_ENV=test rake db:migrate'
alias seed!='rake db:drop && rake db:create && rake db:migrate && rake db:seed'
alias db!='rake db:drop && rake db:create && rake db:migrate'

alias pp="puma -p 3000"

# Rspec
alias t='rspec spec'

# Rake
alias rebuildtestdb!='bundle exec rake RAILS_ENV=test db:drop && rake RAILS_ENV=test db:create && rake RAILS_ENV=test db:migrate' # && rake RAILS_ENV=test db:seed'
alias rebuilddb!='bundle exec rake db:drop && rake db:create && rake db:migrate && rake db:seed'

alias solrstart='rake sunspot:solr:start'
alias solrstop='rake sunspot:solr:stop'

# Routing
alias rr='rake routes'
alias rrg='rake routes | grep'

# Git
alias gcb='git checkout -b'

alias gps='git pull origin staging'
alias gpm='git pull origin master'

alias gpus='git push origin staging'
alias gpum='git push origin master'

alias gs='git status'
alias gd='git diff'
alias gl='git log'
alias gb='git branch'
alias gbd='git branch -d'
alias stash='git stash --include-untracked'
alias 'gitclean!'='git branch --merged | egrep -v "\*|master|develop|development|staging|production" | xargs -n 1 git branch -d'

alias gru='git remote update origin --prune'
alias gse='git log -S'

alias history="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

alias authorme='git filter-branch --commit-filter '"'"'if [ "$GIT_AUTHOR_NAME" = "Rafał Trojanowski" ]; then export GIT_AUTHOR_NAME="Rafał Trojanowski"; export GIT_AUTHOR_EMAIL=rt.trojanowski@gmail.com; fi; git commit-tree "$@"'"'"''
alias committerme='git filter-branch --commit-filter '"'"'if [ "$GIT_COMMITTER_NAME" = "Rafał Trojanowski" ]; then export GIT_COMMITTER_NAME="Rafał Trojanowski"; export GIT_COMMITTER_EMAIL=rt.trojanowski@gmail.com; fi; git commit-tree "$@"'"'"''
alias filtercommits='authorme && committerme'
alias pushdotfiles="git push -f https://rafaltrojanowski@github.com/rafaltrojanowski/dotfiles master:master"

# Python
alias py=python

# Nginx conf
alias nginxconf='g /usr/local/etc/nginx/nginx.conf'

# Sys
# find rails server process
alias rp='lsof -i TCP | grep ruby'
alias ep='lsof -i TCP | grep 35729'
alias ki="kill -9"

alias p/="ps aux | grep puma"
alias ss="spring stop"

# Ember
alias es="ember serve"
alias eb="ember build"
alias et="ember test --serve"
alias etf="ember test --serve --filter"
alias ei="sudo npm install && bower install"
alias eh="ember help generate"

# NPM
alias npmclean="rm -rf node_modules bower_components dist tmp"
alias npmcache="npm cache clean && bower cache clean"

# Elasticsearch
alias el="elasticsearch"

alias wheneverstart="whenever --set environment=development --update-crontab"
alias postgres.server="sudo -u postgres pg_ctl -D /Library/PostgreSQL/9.2/data"
alias killctags="kill $(ps aux | grep ctags | awk '{print $2}')"

alias rds="redis-server"
alias rdsk="pkill -f redis-server"
alias rk="pkill -f ruby"
alias rkill="kill -9 $(lsof -i tcp:3000 -t)"
# alias rkill="kill -9 $(ps aux | grep puma | grep tcp)"
# alias ekill="kill -9 $(lsof -i TCP | grep 35729)"

alias ver="npm view your-addon version" # TODO pass argument here
alias bnk='time ./bin/rails runner '"'"'puts "done"'"'"''

# POSTGRES

alias pgrun='pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'
alias pgstop='pg_ctl -D /usr/local/var/postgres stop -s -m fast'
# psql -U rafaltrojanowski -d local_db_name< ~/Desktop/staging_dump.sql # dump

# PG Fix
alias pgfix='rm /usr/local/var/postgres/postmaster.pid'

# CURL

# curl -v -H "Accept: application/json" -H "Content-type: application/json" -X GET -d ' {}' http://localhost:3000/api/v1/notifications\?id\=oxkzH1cm | python -mjson.tool >> test

# curl -v -H "Accept: application/json" -H "Content-type: application/json" -X GET -d ' {}' http://localhost:3000/api/v1/notifications\?id\=oxkzH1cm | python -mjson.tool

# https://coderwall.com/p/n1d-na/excluding-files-from-git-locally
alias exclude="!sh -c 'echo "$1" >> .git/info/exclude'"
